java.util.HashMap

// HashMap creation with 9 capacity and 0.3 load factor
HashMap<Key, Value> numbers = new HashMap<>(8, 0.6f);

Capacity - The capacity of this hash map is 9. Meaning, it can store 8 entries.(Default = 16)
loadFactor - The load factor of this hashmap is 0.3. This means, whenever our hash table is filled by 30%,
the entries are moved to a new hash table of double the size of the original hash table.(Default = 0.75)

[Methods]
put() - inserts the specified key/value mapping to the map
putAll() - inserts all the entries from specified map to this map
putIfAbsent() - inserts the specified key/value mapping to the map if the specified key is not present in the map

[HashMap Elements]
entrySet() - returns a set of all the key/value mapping of the map
keySet() - returns a set of all the keys of the map
values() - returns a set of all the values of the map
remove(key) - returns and removes the entry associated with the specified key from the map
remove(key, value) - removes the entry from the map only if the specified key mapped to the specified value and return a boolean value
clear()	Removes all the entries from the map
containsKey()	Checks if the map contains the specified key and returns a boolean value
containsValue()	Checks if the map contains the specified value and returns a boolean value
size()	Returns the size of the map
isEmpty()	Checks if the map is empty and returns a boolean value


[Iterating Through a HashMap]

       // Create a HashMap object called capitalCities
           HashMap<String, String> capitalCities = new HashMap<String, String>();

           // Add keys and values (Country, City)
           capitalCities.put("Japan", "Tokyo");
           capitalCities.put("Brazil", "Brasilia");
           capitalCities.put("Columbia", "Bogota");
           capitalCities.put("USA", "Washington DC");
           System.out.println(capitalCities);

      // Print keys
      for (String i : capitalCities.keySet()) {
        System.out.println(i);
      }

      // Print values
      for (String i : capitalCities.values()) {
        System.out.println(i);
      }

      // Print keys and values
      for (String i : capitalCities.keySet()) {
        System.out.println("key: " + i + " value: " + capitalCities.get(i));
      }

